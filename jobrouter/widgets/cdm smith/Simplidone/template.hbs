<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous" />
<link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.8/css/line.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" type="text/css">
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

<script>
let invisLabel = JSON.parse(document.getElementById("simplidone_invisLabel").innerHTML);
let invisIncident = JSON.parse(document.getElementById("simplidone_invisIncident").innerHTML);
let invisEinheit = JSON.parse(document.getElementById("simplidone_invisEinheit").innerHTML).einheit;
let invisEinheitsnummer = JSON.parse(document.getElementById("simplidone_invisEinheit").innerHTML).einheitsnummer;
let username = '';

simplidoneWidget();
$j('#simplidone_outerBox').parent().toggleClass('simplidone_background', true);

function simplidoneWidget() {
    let outerBox = document.getElementById("simplidone_outerBox");

    let dateRange = document.createElement("div");
    dateRange.setAttribute("class", "simplidone_dateRange");
    outerBox.appendChild(dateRange);

    let dropDown = document.createElement("select");
    dropDown.id = "simplidone_dropDown";
    dropDown.setAttribute("class", "simplidone_dropDown");
    dropDown.addEventListener("change", function() {
        simplidoneUpdate();
    });
    for (let i = 0; i < invisEinheit.length; i++) {
        let option = document.createElement("option");
        option.value = invisEinheit[i];
        option.text = invisEinheit[i];
        dropDown.appendChild(option);
    }
    dateRange.appendChild(dropDown);

    let inputWrapper = document.createElement("div");
    inputWrapper.setAttribute("class", "simplidone_inputWrapper");

    let usernameInput = document.createElement("input");
    usernameInput.type = "text";
    usernameInput.id = "simplidone_username";
    usernameInput.placeholder = "Username";
    inputWrapper.appendChild(usernameInput);

    let sendButton = document.createElement("button");
    sendButton.id = "simplidone_sendButton";
    sendButton.setAttribute("class", "fa-solid fa-paper-plane");
    sendButton.addEventListener("click", function(){
        username = usernameInput.value;
        simplidoneUpdate();
    });
    inputWrapper.appendChild(sendButton);

    dateRange.appendChild(inputWrapper);

    let dateFromWrapper = document.createElement("div");
    dateFromWrapper.setAttribute("class", "simplidone_dateWrapper");

    let dateFrom = document.createElement("input");
    dateFrom.id = "simplidone_dateFrom";
    dateFrom.placeholder = "Startdatum";
    dateFrom.autocomplete = "off";
    dateFrom.addEventListener("change", function () {
        simplidoneUpdate();
    });
    dateFromWrapper.appendChild(dateFrom);

    let deleteFromButton = document.createElement("button");
    deleteFromButton.setAttribute("class", "fa-solid fa-trash");
    deleteFromButton.addEventListener("click", function() {
        dateFrom.value = "";
        simplidoneUpdate();
    });
    dateFromWrapper.appendChild(deleteFromButton);

    dateRange.appendChild(dateFromWrapper);

    let dateToWrapper = document.createElement("div");
    dateToWrapper.setAttribute("class", "simplidone_dateWrapper");

    let dateTo = document.createElement("input");
    dateTo.id = "simplidone_dateTo";
    dateTo.placeholder = "Enddatum";
    dateTo.autocomplete = "off";
    dateTo.addEventListener("change", function () {
        simplidoneUpdate();
    });
    dateToWrapper.appendChild(dateTo);

    let deleteToButton = document.createElement("button");
    deleteToButton.setAttribute("class", "fa-solid fa-trash");
    deleteToButton.addEventListener("click", function() {
        dateTo.value = "";
        simplidoneUpdate();
    });
    dateToWrapper.appendChild(deleteToButton);

    dateRange.appendChild(dateToWrapper);

    $j(function () {
        let dateFormat = "dd.mm.yy",
            from = $j("#simplidone_dateFrom")
                .datepicker({
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 1,
                    dateFormat: dateFormat,
                    onSelect: function(dateText, inst) {
                        simplidoneUpdate();
                    }
                })
                .on("change", function () {
                    to.datepicker("option", "minDate", getDate(this));

                }),
            to = $j("#simplidone_dateTo").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                dateFormat: dateFormat,
                onSelect: function(dateText, inst) {
                    simplidoneUpdate();
                }
            })
                .on("change", function () {
                    from.datepicker("option", "maxDate", getDate(this));
                });

        function getDate(element) {
            let date;
            try {
                date = $j.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }

            return date;
        }
    });
    let gridContainer = document.createElement("div");
    gridContainer.setAttribute("class", "simplidone_gridContainer");
    gridContainer.id = "simplidone_gridContainer";
    outerBox.appendChild(gridContainer);

    simplidoneCreateTable();
}

function simplidoneCreateTable(){
    let gridContainer = document.getElementById("simplidone_gridContainer");
    gridContainer.innerHTML = '';

    let gridBoxLeft = document.createElement("div");
    gridBoxLeft.setAttribute("class", "simplidone_gridBox");
    gridContainer.appendChild(gridBoxLeft);

    let gridBoxOne = document.createElement("div");
    gridBoxOne.setAttribute("class", "simplidone_gridBox");
    gridContainer.appendChild(gridBoxOne);

    let gridBoxTwo = document.createElement("div");
    gridBoxTwo.setAttribute("class", "simplidone_gridBox");
    gridContainer.appendChild(gridBoxTwo);

    let gridBoxThree = document.createElement("div");
    gridBoxThree.setAttribute("class", "simplidone_gridBox");
    gridContainer.appendChild(gridBoxThree);

    for (let i = 0; i < invisLabel.length; i++) {
        let label = document.createElement("div");
        label.setAttribute("class", "simplidone_label");
        if (i === 0) {
            label.classList.add('first-index');
        }
        label.innerHTML = invisLabel[i];
        gridBoxLeft.appendChild(label);

        let amount = document.createElement("div");
        amount.setAttribute("class", "simplidone_incident");
        if (i === 0) {
            amount.classList.add('first-index');
        }
        amount.innerHTML = invisIncident[i][0];
        gridBoxOne.appendChild(amount);

        /* Summe Dauer auskommentiert
        let avg = document.createElement("div");
        avg.setAttribute("class", "simplidone_incident");
        if (i === 0) {
            avg.classList.add('first-index');
        }
        avg.innerHTML = invisIncident[i][1];
        gridBoxTwo.appendChild(avg);
        */

        let sum = document.createElement("div");
        sum.setAttribute("class", "simplidone_incident");
        if (i === 0) {
            sum.classList.add('first-index');
        }
        sum.innerHTML = invisIncident[i][2];
        gridBoxThree.appendChild(sum);
    }
}

function simplidoneUpdate() {
    let loader = document.getElementById("simplidone_loader");
    loader.style.opacity = '100';
    let outerBox = document.getElementById("simplidone_outerBox");
    outerBox.style.opacity = '0.5';

    indate = document.getElementById("simplidone_dateFrom").value;
    outdate = document.getElementById("simplidone_dateTo").value;
    einheit = document.getElementById("simplidone_dropDown").value;
    let einheitIndex = invisEinheit.indexOf(einheit);
    let einheitsnummer = invisEinheitsnummer[einheitIndex];

    if (indate != "") {
        let parts = indate.split(".");
        indate = parts[2] + "-" + parts[1] + "-" + parts[0];
    }

    if (outdate != "") {
        let parts = outdate.split(".");
        outdate = parts[2] + "-" + parts[1] + "-" + parts[0];
    }

    username = document.getElementById("simplidone_username").value;

    $j.ajax({
        url: "dashboard/MyWidgets/Simplidone/query.php",
        type: "GET",
        data: { einheit: einheitsnummer, indate: indate, outdate: outdate, username: username },
        dataType: "text",
        success: function (data) {
            loader.style.opacity = '0';
            outerBox.style.opacity = '100';
            if (!data){
                let toast = document.createElement("div");
                toast.setAttribute("id", "simplidone_toast");
                toast.innerText = "User existiert nicht!";
                outerBox.appendChild(toast);
                setTimeout(function(){
                    outerBox.removeChild(toast);
                }, 3000);
            }else{
                invisIncident = JSON.parse(data);
                simplidoneCreateTable();
            }
        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.log(textStatus, errorThrown);
        }
    });
}
</script>

<style>
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

#simplidone_outerBox {
    width: 100%;
    font-family: 'Poppins';
}

#simplidone_toast {
    position: absolute;
    bottom: 20px;
    right: 20px;
    background-color: #d9534f;
    color: #fff;
    padding: 10px 20px;
    border-radius: 5px;
    z-index: 9999;
    opacity: 0;
    animation: fadeInOut 3s forwards;
}

.simplidone_dropDown{
    width: 50%;
    padding: 5px;
    font-size: 16px;
    line-height: 1.75;
    border: 1px solid #252730;
    border-radius: 5px;
    background-color: #242730;
    color: #FFCC0D;
}

.simplidone_inputWrapper {
    display: flex;
    border: 2px solid #242730;
    border-radius: 5px;
    background-color: #242730;
    color: #FFCC0D;
}

#simplidone_username {
    width: 100%;
    font-size: 16px;
    line-height: 1.75;
    border: none;
    background: none;
}

#simplidone_sendButton {
    font-size: 16px;
    line-height: 1.75;
    border: none;
    background: none;
    cursor: pointer;
}

.simplidone_background {
    background-color: #3B3E4D;
    color: #FFCC0D;
    border: none;
}

.simplidone_dateRange {
    display: flex;
    justify-content: space-between;
    gap: 10px;
    text-align: right;
    padding-left: 10px;
        padding-right: 10px;
    font-size: 16px;
    padding-top: 5px;
    padding-bottom: 5px;
}

.simplidone_dateWrapper input {
    width: 100px;
    border: 1px solid #252730;
    border-radius: 5px;
    background: #252730;
    text-align: center;
}

.simplidone_dateWrapper button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
}

.simplidone_dateWrapper {
    display: flex;
    width: 135px;
    border: 1px solid #252730;
    border-radius: 5px;
    background: #252730;
    text-align: center;
}

.simplidone_gridContainer {
    display: grid;
    grid-template-columns: auto auto auto auto;
}

.simplidone_gridBox {
    padding: 10px;
    font-size: 15px;
    line-height: 1.75;
    overflow-x: hidden;
}

.first-index {
    font-weight: bold;
}

.simplidone_label {
    border-bottom: 1px solid #252730;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.simplidone_incident {
    text-align: right;
    border-bottom: 1px solid #252730;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

#simplidone_loader {
    position: absolute;
    top: 45%;
    left: 45%;
    transform: translate(-50%, -50%);
    border: 5px solid rgba(255, 255, 255, 0.3);
    border-top: 5px solid #FFCC0D;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    margin: 0;
    opacity: 0;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

[id^="simplidone_invis"] {
    display: none;
}
</style>

<div id="simplidone_invisIncident">{{incidents}}</div>
<div id="simplidone_invisLabel">{{labels}}</div>
<div id="simplidone_invisEinheit">{{einheit}}</div>
<div id="simplidone_loader"></div>
<div id="simplidone_outerBox"></div>
